name: Continous Integration

on: [push]

env:
  # needed to fix issues with boto during testing:
  # https://github.com/travis-ci/travis-ci/issues/7940
  BOTO_CONFIG: /dev/null
  PIP_USE_PEP517: false

jobs:
  api:
    name: API specification
    runs-on: ubuntu-latest

    steps:
    - name: Checkout git repository
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - run: npm install -g swagger-cli
    - name: Run Swagger
      run: |
        swagger-cli validate docs/_static/spec/action-server.yml
        swagger-cli validate docs/_static/spec/rasa.yml

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout git repository
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Load PIP Cached artifacts
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.7-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-3.7-pip-
    - name: Load Pytype Cached Artifacts
      uses: actions/cache@v1
      with:
        path: .pytype
        key: pytype-${{ hashFiles('rasa/**') }}
        restore-keys: |
          pytype-
    - name: Install Dependencies
      run: |
        sudo apt-get -y install libpq-dev
        python -m pip install -U 'pip<20'
        pip install -r requirements-dev.txt
        pip install -e .
    - name: Lint Code
      run: |
        make lint
    - name: Check Types
      run: |
        make types
    - name: Test CLI
      # makes sure we catch any dependency error early. they will create strange
      # errors during the docs build, so easier to catch them early on by
      # trying to run the `rasa` command once before the docs build.
      run: |
        rasa --help
    - name: Test Docs
      uses: ammaraskar/sphinx-action@0.3
      with:
        docs-folder: "docs/"
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        build-command: "make SPHINXOPTS=\"-W --keep-going -A html_theme=rasabaster\" html"
        pre-build-command: "apt-get update -y && apt-get install -y git"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - name: Checkout git repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load Pip Cached Artifacts
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-
    - name: Install Dependencies
      run: |
        sudo apt-get update -qq
        python -m pip install -U 'pip<20'
        pip install -r requirements-dev.txt
        pip install -e .
        make prepare-tests-ubuntu
        pip list
    - name: Test Code
      run: |
        make test
    - name: Send Coverage Report
      if: matrix.python-version == 3.7
      #env:
      #  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        coveralls

  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - name: Checkout git repository
      uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Build Distributions
        run: |
          python setup.py sdist bdist_wheel
    - name: Publish ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: tmbo
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Notify Slack & Publish Release Notes
      env:
        GH_RELEASE_NOTES_TOKEN: ${{ secrets.GH_RELEASE_NOTES_TOKEN }}
        SLACK_WEBHOOK_TOKEN: ${{ secrets.SLACK_WEBHOOK_TOKEN }}
      # python3 scripts/publish_gh_release_notes.py
      run: |
        sudo apt-get -y install pandoc
        pip install -U github3.py pypandoc
        ./scripts/ping_slack_about_package_release.sh
