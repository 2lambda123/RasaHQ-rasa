name: CI Github Actions

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        test:
        - test-gh-actions
        os: [ ubuntu-latest ]
        python-version: [ 3.7 ]

    steps:
    - name: Checkout git repository üïù
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }} üêç
      uses: actions/setup-python@dc73133d4da04e56a135ae2246682783cc7c7cb6  # v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Read Poetry Version üî¢
      run: |
        echo "POETRY_VERSION=$(scripts/poetry-version.sh)" >> $GITHUB_ENV
      shell: bash

    - name: Install poetry ü¶Ñ
      uses: Gr1N/setup-poetry@v7
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Load Poetry Cached Libraries ‚¨á
      id: cache-poetry
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-venv-${{ secrets.POETRY_CACHE_VERSION }}-${{ env.pythonLocation }}

    - name: Clear Poetry cache
      if: steps.cache-poetry.outputs.cache-hit == 'true' && contains(github.event.pull_request.labels.*.name, 'tools:clear-poetry-cache-unit-tests')
      run: rm -r .venv

    - name: Test Code üîç
      run: |
        make ${{ matrix.test }}
