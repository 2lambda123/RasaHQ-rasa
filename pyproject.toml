[build-system]
requires = ["poetry-core>=1.0.4"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
exclude = "(\\.eggs|\\.git|\\.pytest_cache|build|dist)"

[tool.poetry]
name = "rasa"
version = "3.7.1"
description = "Open source machine learning framework for text- and voice-based conversations."
authors = ["Rasa Technologies GmbH <hi@rasa.com>"]
maintainers = ["Tom Bocklisch <tom@rasa.com>"]
homepage = "https://rasa.com"
repository = "https://github.com/rasahq/rasa"
documentation = "https://rasa.com/docs"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries"
]
keywords = [
    "nlp", "machine-learning", "bot", "conversational-ai", "chatbot", "rasa"
]
readme = "README.md"
license = "Apache-2.0"
include = [
    "LICENSE.txt", "README.md", "rasa/shared/core/training_data/visualization.html", 
    "rasa/cli/default_config.yml", "rasa/shared/importers/*", "rasa/utils/schemas/*", "rasa/keys"
]
[[tool.poetry.source]]
name = "internal repository mirroring psycopg binary for macos"
url = "https://pypi.org/simple/"

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
rasa-sdk = "^3"
aiohttp = "^3.10"
boto3 = "^1.26"
requests = "^2.23"
matplotlib = "^3.1"
attrs = "^24.2"
redis = "^5"
tqdm = "^4.31"
networkx = "^3"
"ruamel.yaml" = "^0.16"
pyyaml = "^6.0"
SQLAlchemy = "^1.4"
protobuf = "^4.23"
cloudpickle = "^3"
jsonschema = "^4.23"
tensorflow_hub = "^0.16"
setuptools = "^75"
certifi = "^2024.8"
cryptography = "^43.0"
structlog = "^24.4"
structlog-sentry = "^2.1"
pydantic = { extras = ["dotenv"], version = "^1" }
terminaltables = "^3.1"
tarsafe = "^0.0"
absl-py = "^2.1"
apscheduler = "^3.10"
fbmessenger = "^6.0"
pykwalify = "^1.8"
coloredlogs = "^15.0"
twilio = "^9.3"
webexteamssdk = "^1.6"
mattermostwrapper = "^2.2"
rocketchat_API = "^1.32"
colorhash = "^2.0"
jsonpickle = "^3.3"
packaging = "^21"
pytz = "^2024.2"
colorclass = "^2.2"
sanic = "^21.12"
sanic-cors = "^2.2"
sanic-jwt = "^1.8"
sanic-routing = "^0.7"
websockets = "^10.4"
questionary = "^2.0"
prompt-toolkit = "^3.0"
python-socketio = "^5.11"
python-engineio = "^4"
pydot = "^3.0"
sklearn-crfsuite = "^0.5"
psycopg2-binary = "^2.9"
python-dateutil = "^2.9"
ujson = "^5.10"
regex = "^2024.9"
joblib = "^1.4"
sentry-sdk = "^2.14"
aio-pika = "^9.4"
aiogram = "^2.15"
typing-extensions = "^4"
typing-utils = "^0.1"
google-auth = "^2"
CacheControl = "^0.14"
randomname = "^0.2"
pluggy = "^1.5"
slack-sdk = "^3.33"
confluent-kafka = "^2.5"
portalocker = "^2.10"
dnspython = "^2.3"
wheel = "^0.44"
lockfile = "^0.12"
spacy = "^3.7"
jax = "^0.4"
jaxlib = "^0.4"

# TensorFlow-related dependencies for different platforms
tensorflow = { version = "2.12", markers = "sys_platform != 'darwin' or platform_machine != 'arm64'" }
tensorflow-intel = { version = "2.12", markers = "sys_platform == 'win32'" }
tensorflow-cpu-aws = { version = "2.12", markers = "sys_platform == 'linux' and (platform_machine == 'arm64' or platform_machine == 'aarch64')" }
tensorflow-macos = { version = "2.12", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'" }
tensorflow-text = { version = "2.12", markers = "sys_platform != 'win32' and platform_machine != 'arm64' and platform_machine != 'aarch64'" }
tensorflow-metal = { version = "^1.1", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'", optional = true }

# TensorFlow IO GCS Filesystem with platform-specific markers
tensorflow-io-gcs-filesystem = [
    { version = "^0.37", markers = "sys_platform == 'win32'" },
    { version = "^0.37", markers = "sys_platform == 'linux'" },
    { version = "^0.37", markers = "sys_platform == 'darwin' and platform_machine != 'arm64'" }
]


# Extra packages
transformers = { version = "^4.44", optional = true }
sentencepiece = { version = "^0.2", optional = true }

[tool.poetry.extras]
transformers = ["transformers", "sentencepiece"]
full = ["transformers", "sentencepiece"]
metal = [ "tensorflow-metal",]

# Development dependencies
[tool.poetry.dev-dependencies]
pytest-sanic = { git = "https://github.com/RasaHQ/pytest-sanic", branch = "fix_signal_issue" }

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
warn_unused_ignores = true
disallow_untyped_calls = true

[tool.ruff]
ignore = ["D100", "D104", "D105", "RUF001", "RUF002"]
line-length = 88
select = ["D", "E", "F", "W", "RUF"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/test_telemetry.py" = ["E501"]
"tests/shared/core/test_domain.py" = ["E501"]

[tool.pytest.ini_options]
python_functions = "test_"
filterwarnings = ["ignore::ResourceWarning:ruamel[.*]"]
timeout = 60
asyncio_mode = "auto"


[tool.poetry.dependencies.pymongo]
version = "^4.9"
extras = [ "tls", "srv",]

[[tool.poetry.dependencies.dask]]
version = "^2022"
python = ">=3.10"

[[tool.poetry.dependencies.numpy]]
version = "^1"
python = ">=3.10,<3.11"

[[tool.poetry.dependencies.numpy]]
version = "^1"
markers = "sys_platform =='Windows' and platform_python_implementation != 'PyPy'"
python = "3.10"

[[tool.poetry.dependencies.scipy]]
version = "^1.14"
python = ">=3.10,<3.11"

[[tool.poetry.dependencies.scikit-learn]]
version = "^1.5"
python = ">=3.10,<3.11"

[tool.poetry.dependencies.PyJWT]
version = "^2.9"
extras = [ "crypto",]

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.255"
docker = "^6.0.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.20.0"
pytest-xdist = "^3.2.1"
pytest = "^7.1.3"
freezegun = "^1.0.0"
responses = "^0.22.0"
aioresponses = "^0.7.2"
moto = "^4.1"
fakeredis = "^2.11.2"
mongomock = "^4.1.2"
black = "^22.10.0"
google-cloud-storage = "^2.4.0"
azure-storage-blob = "^12.17"
coveralls = "^3.0.1"
towncrier = "^22.8.0"
toml = "^0.10.0"
pydoc-markdown = "^4.7.0"
pytest-timeout = "^2.1.0"
mypy = "^1.0.0"
bandit = "^1.6.3"
types-pytz = "^2022.1.1"
types-python-dateutil = "^2.8.19"
types-requests = "^2.25.0"
types-setuptools = "^67.2.0"
memory-profiler = "^0.61.0"
psutil = "^5.8.0"
mypy-extensions = "^0.4.3"
analytics-python = "^1.4.0"
datadog-api-client = "^2.0.0"
datadog = "^0.45.0"
types-redis = "^4.3.20"
httpx = "^0.23"

[tool.poetry.scripts]
rasa = "rasa.__main__:main"
